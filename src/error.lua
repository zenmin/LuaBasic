---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 74170.
--- DateTime: 2019/10/21 14:30
--- 错误处理

local function add(a, b)
    assert(type(a) == "number", "a 不是一个数字")
    assert(type(b) == "number", "b 不是一个数字")
    return a + b
end

print(add(1, 2))


--Level=1[默认]：为调用error位置(文件+行号)
--Level=2：指出哪个调用error的函数的函数
--Level=0:不添加错误位置信息

--print(error("错误信息", 1))


--Lua中处理错误，可以使用函数pcall（protected call）来包装需要执行的代码。
--
--pcall接收一个函数和要传递给后者的参数，并执行，执行结果：有错误、无错误；返回值true或者或false, errorinfo。

if pcall(
        function()
            local a = 'a'
            local b = 1
            print(a / b)
        end
)
then
    print("没有错误")
else
    print("出现错误")
end

print("-------------------")

xpcall(
        function()
            local a = 'a'
            local b = 1
            print(a / b)
        end
, function(err)
            print("错误信息：" .. err)
        end)

print("-------------------")

function now()
    debug.getinfo(1)
    print(debug.traceback('stack trace'))
end

now()